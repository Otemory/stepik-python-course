"""GC-состав является важной характеристикой геномных последовательностей и определяется как процентное
соотношение суммы всех гуанинов и цитозинов к общему числу нуклеиновых оснований в геномной последовательности.

Напишите программу, которая вычисляет процентное содержание символов G (гуанин) и C (цитозин) в введенной строке
(программа не должна зависеть от регистра вводимых символов).

Например, в строке "acggtgttat" процентное содержание символов G и C равно 4/ {10} * 100 = 40.0
где 4 -- это количество символов G и C,  а 10 -- это длина строки."""
"""
genom = input()
g = genom.lower().count('g')
c = genom.lower().count('c')
print(((g + c) / len(genom)) * 100)

"""
"""
s = 'abcdefghijk'
print(s[3:6], s[:6], s[3:], s[::-1], s[-3:], s[:-6], s[-1:-10:-2])
"""
"""
Узнав, что ДНК не является случайной строкой, только что поступившие в Институт биоинформатики студенты 
группы информатиков предложили использовать алгоритм сжатия, который сжимает повторяющиеся символы в строке.

Кодирование осуществляется следующим образом:
s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов исходной строки заменяются на этот 
символ и количество его повторений в этой позиции строки.

Напишите программу, которая считывает строку, кодирует её предложенным алгоритмом и выводит закодированную 
последовательность на стандартный вывод. Кодирование должно учитывать регистр символов.
"""

gen = input()
i = 0  # index
cnt = 1  # count of simbols
if len(gen) == 1:
    print(gen[i] + str(cnt))
else:
    while i < len(gen) - 1:
        if gen[i] == gen[i + 1]:
            cnt += 1
            i += 1
        else:
            print(gen[i] + str(cnt), end="")
            i += 1
            cnt = 1
    print(gen[i] + str(cnt))


# е мое решение

genome = input()+' '
s = 0
n = genome[0]           # n = первый элемент в повторяющейся последовательности, для первого элемента строки это верно.
for i in genome:        # текущий элемент всегда i
    if n != i:          # в цикл попадаем, когда первый элемент повторяющихся элементов не совпадёт со следующим элементом
        print(n + str(s), end='')
        s = 0           # инициализируем длину для новой повторяющейся последовательности = 0
        n = i           # новая последовательность начинается с нового элемента, запишем его в n
    s += 1              # мы сдвинулись на 1 элемент, поэтому увеличиваем последовательность элементов на 1.